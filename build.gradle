plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jetbrains.kotlin.jvm' version '2.0.21'

	// Kotlin Spring support compiler plugin
	id "org.jetbrains.kotlin.plugin.spring" version "2.0.21"

	// The Lombok compiler plugin is Experimental.
	id 'org.jetbrains.kotlin.plugin.lombok' version '2.0.21'
	id 'io.freefair.lombok' version '8.10'

	id 'org.asciidoctor.jvm.convert' version '4.0.3'
}

group = 'id.winnicode'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

asciidoctor {
	sourceDir 'src/docs/asciidoc'
	attributes \
      'snippets': file('build/snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-security"

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

	// Enable Java Reflection in Kotlin
	implementation "org.jetbrains.kotlin:kotlin-reflect:2.0.21"

	//JJWT
	implementation 'io.jsonwebtoken:jjwt:0.12.6'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.2'

}

ext {
	set('snippetsDir', file("build/snippets"))
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}